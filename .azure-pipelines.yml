trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
# üîê Azure Login (starter stage)
- stage: AzureLogin
  jobs:
  - job: login
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureDevopsSP-MSDN'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "‚úÖ Logged in to Azure!"

# üß± Terraform Infra
- stage: TerraformInfra
  dependsOn: AzureLogin
  variables:
  - group: terraform-auth  # this group contains ARM_* variables

  jobs:
  - job: buildInfra
    steps:
    - script: |
        echo "üß± Installing Terraform..."
        curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -v
      displayName: 'Install Terraform'

    - script: |
        cd infra
        terraform init
        terraform apply -auto-approve
      displayName: 'Run Terraform'
      env:
        TF_VAR_client_id: $(ARM_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_CLIENT_SECRET)
        TF_VAR_subscription_id: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_tenant_id: $(ARM_TENANT_ID)

# üê≥ Build and Push Images
- stage: BuildImages
  dependsOn: TerraformInfra
  jobs:
  - job: buildpushImages
    steps:
    - task: AzureCLI@2  # üîê Login to access ACR
      inputs:
        azureSubscription: 'AzureDevopsSP-MSDN'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "‚úÖ Logged in to Azure for ACR access"

    - script: |
        make get-azure-resources
      displayName: 'Builds all container images and pushes to ACR'

# üöÄ Deploy to AKS
- stage: DeployToAKS
  dependsOn: BuildImages
  jobs:
  - job: Deploy
    steps:
    - task: AzureCLI@2  # üîê Login to pull kube credentials
      inputs:
        azureSubscription: 'AzureDevopsSP-MSDN'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "‚úÖ Logged in to Azure to deploy to AKS"

    - script: |
        make deploy-azure
      displayName: 'Deploy to AKS cluster'

# ‚ú® Install Flux
- stage: InstallFlux
  dependsOn: DeployToAKS
  jobs:
  - job: fluxInstall
    steps:
    - checkout: self

    - task: AzureCLI@2  # üîê Login to get AKS access and install Flux
      inputs:
        azureSubscription: 'AzureDevopsSP-MSDN'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "üîë Logging in to AKS"
          az aks get-credentials --resource-group toyshop-rg --name toyshop-aks

          echo "üîß Installing Flux CLI"
          curl -s https://fluxcd.io/install.sh | bash
          export PATH=$PATH:/home/vsts/.flux/bin

          echo "üì¶ Bootstrapping Flux"
          flux bootstrap github \
            --owner=ukez15 \
            --repository=technical-code-challenge \
            --branch=main \
            --path=clusters/prod \
            --personal
